---
title: "Lebrec"
format: html
---
#Introduction
```{r}
library(dplyr)
library(ggplot2)
library(readr)
library(knitr)
library(tidyr)
theme_set(theme_minimal())
```

## Question 1 - Load the Data Set

```{r}
# Load the data set
grades <- read_csv("grades.csv")

```

```{r}
nrow(grades)
```
#Simple analyses
## Question 2 - Number of Grades

```{r, echo = FALSE}
# Calculate and display the sentence with the number of grades
paste("The data set contains", nrow(grades), "grades.")
```

## question 3 
```{r}
# Create a new data frame with unique students and their groups
unique_students <- grades %>%
  distinct(id, group)

# Calculate the number of unique students
num_students <- nrow(unique_students)

```
## Preview of the Last Five Rows of the Grades Data Set

## Preview of the Last Five Rows of the Grades Data Set

```{r, echo = FALSE}
# Display the last five rows of the grades data frame
grades |>
  slice_tail(n = 5) |>
  knitr::kable()
```
## question 4 
```{r}
# Create a students data frame with unique student IDs and groups
students <- grades |> distinct(id, group)

# Display the first few rows of the students data frame
students |> slice_head(n = 5) |> knitr::kable()
```
## question 5 
```{r}
# Calculate the number of students per group
students_per_group <- students |>
  count(group)
```

```{r}
# Create a bar plot of the number of students per group with colors
ggplot(students_per_group, aes(x = factor(group), y = n, fill = factor(group))) +
  geom_col() +
  labs(title = "Number of Students per Group", x = "Group", y = "Number of Students") +
  theme_minimal() +
  scale_fill_viridis_d() 
```
#question 6 
```{r}
# Filter for the course "Archery and Marksmanship" and compute the average grade per group
archery_avg <- grades |>
  filter(course == "Archery and Marksmanship") |>
  group_by(group) |>
  summarise(avg_grade = mean(grade, na.rm = TRUE))

# Plot the average grade per group using geom_col()
ggplot(archery_avg, aes(x = factor(group), y = avg_grade, fill = factor(group))) +
  geom_col() +
  labs(title = "Average Grade in Archery and Marksmanship by Group", x = "Group", y = "Average Grade") +
  theme_minimal() +
  scale_fill_viridis_d() # Optional, use a color scale for differentiation
```
## question 7 

```{r}
# Box plot comparing grade distributions between the two semesters
ggplot(grades, aes(x = factor(semester), y = grade, fill = factor(semester))) +
  geom_boxplot() +
  labs(title = "Grade Distribution by Semester", x = "Semester", y = "Grade") +
  theme_minimal() +
  scale_fill_viridis_d(name = "Semester")
#comment;
"it seems that the second semester has higher grades then the first one but idk why maybe they have more experince"

```

#Attendance analysis
##question 8 
```{r}
# Compute the number of grades per student, including their id and group
grades_per_student <- grades |>
  count(id, group, name = "num_grades")

# Display an extract of the resulting data frame (first 5 rows)
grades_per_student |>
  slice_head(n = 5) |>
  knitr::kable()

```
```{r}
grades %>%
  distinct(id, course, .keep_all = TRUE) %>%  # Ensure each student-course combination is unique
  group_by(course) %>%                        # Group by course
  summarise(
    min_grade = min(grade, na.rm = TRUE),      # Minimum grade for each course
    median_grade = median(grade, na.rm = TRUE), # Median grade for each course
    mean_grade = mean(grade, na.rm = TRUE),    # Mean grade for each course
    max_grade = max(grade, na.rm = TRUE),      # Maximum grade for each course
    n_students = n()                           # Number of unique students in each course
  )
```
## question 9 
```{r}
# Filter for "Onmyodo and Occult Arts" and count grades per student
onmyodo_grades <- grades %>%
  filter(course == "Onmyodo and Occult Arts") %>%
  group_by(id, group) %>%
  summarise(num_grades = n(), .groups = "drop")  # Count grades for each student

# Display the first 5 rows as an extract
onmyodo_grades %>%
  slice_head(n = 5) %>%
  knitr::kable()
```
##question 10 

```{r}
 # Calculate the distribution of the number of grades
grade_distribution <- onmyodo_grades %>%
  count(num_grades, name = "num_students")  # Count the number of students for each number of grades

# Plot the distribution
ggplot(grade_distribution, aes(x = num_grades, y = num_students)) +
  geom_col(fill = "steelblue") +
  labs(
    title = "Distribution of the Number of Grades in Onmyodo and Occult Arts",
    x = "Number of Grades",
    y = "Number of Students"
  ) +
  theme_minimal()
```
## question 11 
```{r}
# Violin plot to see the distribution of grades per student by group
ggplot(onmyodo_grades, aes(x = factor(group), y = num_grades)) +
  geom_violin(fill = "lightgreen", alpha = 0.7) +
  labs(
    title = "Distribution of Number of Grades in Onmyodo and Occult Arts by Group",
    x = "Group",
    y = "Number of Grades per Student"
  ) +
  theme_minimal()
"comment: at eye level there is no big discranpecies, but more calculation would be required, there seems to be an exeption for group 15 tho."
```

#Grade analysis 
## question 12 
```{r}
# Calculate the average grade per course for each student
student_course_averages <- grades %>%
  group_by(id, group, course) %>%
  summarise(avg_grade = mean(grade, na.rm = TRUE), .groups = "drop")

# Pivot to create a wide-format data frame with one column per course
student_course_pivot <- student_course_averages %>%
  pivot_wider(
    names_from = course,      # Use course names as new column names
    values_from = avg_grade    # Use the average grade as the values for each course
  )

# Display a small extract (first 5 rows) with id, group, and two example courses
student_course_pivot %>%
  select(id, group, `Archery and Marksmanship`, `Bushido and Samurai Code`) %>%
  slice_head(n = 5) %>%
  knitr::kable()
```
## question 13 
```{r}
# Filter the data to only include the relevant courses for readability
average_grades <- student_course_pivot %>%
  select(id, group, `Bushido and Samurai Code`, `Ninjutsu and Stealth Arts`)

# Scatter plot to compare the average grades in the two courses
ggplot(average_grades, aes(x = `Ninjutsu and Stealth Arts`, y = `Bushido and Samurai Code`)) +
  geom_point(color = "steelblue", size = 3, alpha = 0.7) +  # Points for each student
  geom_smooth(method = "lm", color = "darkred", linetype = "dashed") + # Optional trend line
  labs(
    title = "Comparison of Average Grades in Bushido and Samurai Code vs. Ninjutsu and Stealth Arts",
    x = "Average Grade in Ninjutsu and Stealth Arts",
    y = "Average Grade in Bushido and Samurai Code"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(size = 14, face = "bold", hjust = 0.5),
    axis.title = element_text(size = 12)
  )
```

